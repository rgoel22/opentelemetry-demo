name: CI/CD Pipeline with Trace Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install dependencies (kubectl, AWS CLI)
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -LO "https://dl.k8s.io/release/v1.27.5/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          curl -sL https://raw.githubusercontent.com/tracetest/cli/main/install.sh | bash

      # Step 3: Configure AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 4: Update kubeconfig for EKS
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name otel-demo

      # Step 5: Deploy Application
      - name: Deploy Application
        run: |
          kubectl apply -R -f ./opentelemetry-split/

      # Step 6: Set up environment variables for tests
      - name: Set Environment Variables
        env:
          AD_SERVICE_ADDR: http://adservice.otel-demo.svc.cluster.local:8080
          CART_SERVICE_ADDR: http://cartservice.otel-demo.svc.cluster.local:8080
          CHECKOUT_SERVICE_ADDR: http://checkoutservice.otel-demo.svc.cluster.local:8080
          CURRENCY_SERVICE_ADDR: http://currencyservice.otel-demo.svc.cluster.local:8080
          EMAIL_SERVICE_ADDR: http://emailservice.otel-demo.svc.cluster.local:8080
          FRONTEND_ADDR: http://frontend.otel-demo.svc.cluster.local:8080
          PAYMENT_SERVICE_ADDR: http://paymentservice.otel-demo.svc.cluster.local:8080
          PRODUCT_CATALOG_SERVICE_ADDR: http://productcatalogservice.otel-demo.svc.cluster.local:8080
          RECOMMENDATION_SERVICE_ADDR: http://recommendationservice.otel-demo.svc.cluster.local:8080
          SHIPPING_SERVICE_ADDR: http://shippingservice.otel-demo.svc.cluster.local:8080
          KAFKA_SERVICE_ADDR: http://kafka.otel-demo.svc.cluster.local:9092
        run: echo "Environment variables set for trace testing."

      # Step 7: Run Trace-Based Tests
      - name: Run Trace-Based Tests
        working-directory: test/tracetesting
        run: |
          chmod +x run.bash
          ./run.bash

      # Step 8: Verify Exit Code and Rollback on Failure
      - name: Rollback on Failure
        if: failure()
        run: |
          echo "Rolling back due to failed tests."
          for deployment in $(kubectl get deployments -n otel-demo -o jsonpath='{.items[*].metadata.name}'); do
            echo "Rolling back deployment: $deployment"
            kubectl rollout undo deployment/$deployment -n otel-demo || echo "No rollback history for deployment $deployment. Skipping."
          done

      # Step 9: Display Success Message
      - name: Display Success Message
        if: success()
        run: echo "CI/CD pipeline executed successfully!"
