name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Kubernetes CLI (kubectl)
      - name: Install kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -LO "https://dl.k8s.io/release/v1.27.5/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Step 3: Set up AWS CLI
      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 4: Update kubeconfig for EKS
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region us-east-1 --name otel-demo

      # Step 5: Apply Namespace YAML
      - name: Apply Namespace
        run: |
          kubectl apply -f ./opentelemetry-split/Namespaces/namespaces_1.yaml

      # Step 6: Apply Other Resources Recursively
      - name: Deploy Application
        run: |
          kubectl apply -R -f ./opentelemetry-split/

      # Step 7: Verify Deployment
      - name: Verify Pods
        run: |
          kubectl get pods -n otel-demo

      # Step 8: Build Docker Image for Tracetest
      - name: Build Tracetest Image
        run: |
          docker build \
          --build-arg TRACETEST_IMAGE_VERSION=1.7.1 \
          -t tracetesting-image \
          -f ./test/tracetesting/Dockerfile .

      # Step 9: Configure Tracetest CLI
      - name: Configure Tracetest CLI
        run: |
          docker run --rm tracetesting-image tracetest configure --server-url http://host.docker.internal:11633

      # Step 10: Run Tracetest Inside Docker
      - name: Run Tracetests
        run: |
          docker run --rm \
          -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
          -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
          -e AWS_DEFAULT_REGION=us-east-1 \
          tracetesting-image

      # Step 11: Rollback on Failure
      - name: Rollback on Failure
        if: failure()
        run: |
          echo "Rolling back all deployments in the namespace due to failure."
          for deployment in $(kubectl get deployments -n otel-demo -o jsonpath='{.items[*].metadata.name}'); do
            echo "Rolling back deployment: $deployment"
            kubectl rollout undo deployment/$deployment -n otel-demo || echo "No rollback history for deployment $deployment. Skipping."
          done

      # Step 12: Display Success Message
      - name: Display Success Message
        if: success()
        run: echo "CI/CD pipeline executed successfully!"
