name: Build and Push to ECR

on:
  workflow_call:

env:
  AWS_REGION: us-east-1
  ECR_REPO_URI: 314147830127.dkr.ecr.us-east-1.amazonaws.com/otel-demo

jobs:
  protobufcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate Protobuf
        run: make clean docker-generate-protobuf
      - name: Check Work Tree
        run: make check-clean-work-tree

  build_and_push:
    runs-on: ubuntu-latest
    needs: protobufcheck
    strategy:
      fail-fast: false
      matrix:
        services:
          - file: ./src/accountingservice/Dockerfile
            tag_suffix: accountingservice
            context: ./src/accountingservice
            setup-qemu: true
          - file: ./src/adservice/Dockerfile
            tag_suffix: adservice
            context: ./src/adservice
            setup-qemu: true
          # Additional services...

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load environment variables from .env file
        run: |
          if [ -f .env ]; then
            grep -vE '^\s*#|^\s*$' .env | while read -r line; do
              echo "$line" >> $GITHUB_ENV
            done
          else
            echo "No .env file found, proceeding without additional environment variables."
          fi

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ env.AWS_REGION }}

      - name: Set up QEMU
        if: ${{ matrix.services.setup-qemu }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [worker.oci]
            max-parallelism = 4

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.10.0
        with:
          context: ${{ matrix.services.context }}
          file: ${{ matrix.services.file }}
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: |
            OTEL_JAVA_AGENT_VERSION=${{ env.OTEL_JAVA_AGENT_VERSION }}
            OPENTELEMETRY_CPP_VERSION=${{ env.OPENTELEMETRY_CPP_VERSION }}
            TRACETEST_IMAGE_VERSION=${{ env.TRACETEST_IMAGE_VERSION }}
          tags: |
            ${{ env.ECR_REPO_URI }}:${{ github.sha }}-${{ matrix.services.tag_suffix }}
            ${{ env.ECR_REPO_URI }}:latest-${{ matrix.services.tag_suffix }}
