name: Build and Push to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPO_URI: 314147830127.dkr.ecr.us-east-1.amazonaws.com/otel-demo

jobs:
  protobufcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate Protobuf
        run: make clean docker-generate-protobuf
      - name: Check Work Tree
        run: make check-clean-work-tree

  build_and_push:
    runs-on: ubuntu-latest
    needs: protobufcheck
    strategy:
      fail-fast: false
      matrix:
        services:
          - file: ./src/accountingservice/Dockerfile
            tag_suffix: accountingservice
            context: ./src/accountingservice
            setup-qemu: true
          - file: ./src/adservice/Dockerfile
            tag_suffix: adservice
            context: ./src/adservice
            setup-qemu: true
          - file: ./src/cartservice/Dockerfile
            tag_suffix: cartservice
            context: ./src/cartservice
            setup-qemu: true
          - file: ./src/checkoutservice/Dockerfile
            tag_suffix: checkoutservice
            context: ./src/checkoutservice
            setup-qemu: true
          - file: ./src/currencyservice/Dockerfile
            tag_suffix: currencyservice
            context: ./src/currencyservice
            setup-qemu: true
          - file: ./src/emailservice/Dockerfile
            tag_suffix: emailservice
            context: ./src/emailservice
            setup-qemu: true
          - file: ./src/frauddetectionservice/Dockerfile
            tag_suffix: frauddetectionservice
            context: ./src/frauddetectionservice
            setup-qemu: true
          - file: ./src/frontend/Dockerfile
            tag_suffix: frontend
            context: ./src/frontend
            setup-qemu: true
          - file: ./src/frontendproxy/Dockerfile
            tag_suffix: frontendproxy
            context: ./src/frontendproxy
            setup-qemu: true
          - file: ./src/frontend/Dockerfile.cypress
            tag_suffix: frontend-tests
            context: ./src/frontend
            setup-qemu: true
          - file: ./src/imageprovider/Dockerfile
            tag_suffix: imageprovider
            context: ./src/imageprovider
            setup-qemu: true
          - file: ./src/kafka/Dockerfile
            tag_suffix: kafka
            context: ./src/kafka
            setup-qemu: true
          - file: ./src/loadgenerator/Dockerfile
            tag_suffix: loadgenerator
            context: ./src/loadgenerator
            setup-qemu: true
          - file: ./src/paymentservice/Dockerfile
            tag_suffix: paymentservice
            context: ./src/paymentservice
            setup-qemu: true
          - file: ./src/productcatalogservice/Dockerfile
            tag_suffix: productcatalogservice
            context: ./src/productcatalogservice
            setup-qemu: true
          - file: ./src/quoteservice/Dockerfile
            tag_suffix: quoteservice
            context: ./src/quoteservice
            setup-qemu: true
          - file: ./src/recommendationservice/Dockerfile
            tag_suffix: recommendationservice
            context: ./src/recommendationservice
            setup-qemu: true
          - file: ./src/shippingservice/Dockerfile
            tag_suffix: shippingservice
            context: ./src/shippingservice
            setup-qemu: true
          - file: ./src/flagd-ui/Dockerfile
            tag_suffix: flagdui
            context: ./src/flagd-ui
            setup-qemu: true
          - file: ./test/tracetesting/Dockerfile
            tag_suffix: traceBasedTests
            context: ./test/tracetesting
            setup-qemu: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load environment variables from .env file
        run: |
          if [ -f .env ]; then
            grep -vE '^\s*#|^\s*$' .env | while read -r line; do
              echo "$line" >> $GITHUB_ENV
            done
          fi

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          region: ${{ env.AWS_REGION }}

      - name: Set up QEMU
        if: ${{ matrix.services.setup-qemu }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.10.0
        with:
          context: ${{ matrix.services.context }}
          file: ${{ matrix.services.file }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.ECR_REPO_URI }}:${{ matrix.services.tag_suffix }}
            ${{ env.ECR_REPO_URI }}:latest-${{ matrix.services.tag_suffix }}
